{"data":{"page":{"html":"<p>All starters of <strong>Gatsby Starter Kit</strong> use <strong>Markdown</strong> files to store content. The markdown files are gathered in sub-folders of <code class=\"language-text\">src/content/</code>. Depending on a starter there could be four type sub-folders under <code class=\"language-text\">src/content/</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">root\n  └── src\n      ├── content\n      │   ├── docs\n      │   ├── pages\n      │   ├── posts\n      │   └── parts</code></pre></div>\n<p>To effectively employ the Kit’s built-in scripts you should obey some naming rules.</p>\n<h2 id=\"posts\"><a href=\"#posts\" aria-hidden=\"true\" class=\"anchor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>Posts</h2>\n<p>Let’s start with <strong>posts</strong>. If you install the <a href=\"/gatsby-starter-kit-docs/blog-starter\">Blog</a> starter with a default content you will see something like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">root\n  └── src\n      ├── content\n      │   ├── posts\n      │   │   ├── 2017-10-01___two-things-are-infinit\n      │   │   |   ├── photo.png\n      │   │   │   └── index.md\n      │   │   ├── 2017-10-03___be-who-you-are\n      │   │   |   ├── photo.png\n      │   │   │   └── index.md\n      |   |\n      |   |   ...\n      |   |\n      │   │   └── 2017-10-21___like-nonsense\n      │   │       ├── photo.png\n      │   │       └── index.md</code></pre></div>\n<p>Every post markdown file <code class=\"language-text\">index.md</code> has its own separate folder. The name of the post’s folder should be consistent with the <strong>pattern</strong>.</p>\n<ul>\n<li>a post date <strong>prefix</strong> (YYYY-MM-DD pattern)</li>\n<li>a <strong>separator</strong> <code class=\"language-text\">___</code> (three underscores)</li>\n<li>a <strong>slug</strong> (kebab-case or whatever you want)</li>\n</ul>\n<p>The starters use the <a href=\"https://www.gatsbyjs.org/docs/node-apis/#onCreateNode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">onCreateNode</a> method of the Gatsby Node API to transform the name of every folder into two node fields <code class=\"language-text\">slug</code> and <code class=\"language-text\">prefix</code>.</p>\n<h3 id=\"slug\"><a href=\"#slug\" aria-hidden=\"true\" class=\"anchor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>slug</h3>\n<p>Take a look at the code of the <code class=\"language-text\">gatsby-node.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createFilePath <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`gatsby-source-filesystem`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SLUG_SEPARATOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">'___'</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token string\">`MarkdownRemark`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fileNode <span class=\"token operator\">=</span> <span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> <span class=\"token function\">createFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> fileNode<span class=\"token punctuation\">.</span>sourceInstanceName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> separatorExists <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>filePath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SLUG_SEPARATOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> slug<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> prefix<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>separatorExists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> separatorPosition <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SLUG_SEPARATOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> slugBeginning <span class=\"token operator\">=</span> separatorPosition <span class=\"token operator\">+</span> <span class=\"token constant\">SLUG_SEPARATOR</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      slug <span class=\"token operator\">=</span>\n        separatorPosition <span class=\"token operator\">===</span> <span class=\"token number\">1</span>\n          <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span>\n          <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>filePath<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>slugBeginning<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n      prefix <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> separatorPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">;</span>\n      prefix <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source <span class=\"token operator\">!==</span> <span class=\"token string\">'parts'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`slug`</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> slug<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`prefix`</span></span><span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">:</span> prefix<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pay attention to two fragments. The first assigns <code class=\"language-text\">null</code> to <code class=\"language-text\">slug</code> when the <strong>separator</strong> is at the beginning of the folder’s name.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">slug <span class=\"token operator\">=</span> separatorPosition <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>filePath<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>slugBeginning<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So, if you name a folder like below, with separator <code class=\"language-text\">___</code>, but without the date <code class=\"language-text\">prefix</code>, the slug will have value of <code class=\"language-text\">null</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/content/posts/___this-is-post-folder-name/</code></pre></div>\n<p>The second fragment prevents creation of the <code class=\"language-text\">slug</code> field for nodes with <code class=\"language-text\">source</code> equal to <strong>parts</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source <span class=\"token operator\">!==</span> <span class=\"token string\">'parts'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    node<span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`slug`</span></span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span> slug<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Later in the same file we use the <a href=\"https://www.gatsbyjs.org/docs/node-apis/#onCreatePage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">onCreatePage</a> method of the Gatsby Node API to create web pages for every eligible node.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pageTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/PageTemplate.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n        {\n          allMarkdownRemark(filter: { fields: { slug: { ne: null } } }) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">;</span>\n\n        items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> slug <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">;</span>\n\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> slug<span class=\"token punctuation\">,</span>\n            component<span class=\"token punctuation\">:</span> pageTemplate<span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              slug<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This time pay attention to this fragment with <strong>GraphQL filter</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">allMarkdownRemark</span><span class=\"token punctuation\">(</span>filter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> slug<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> ne<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></code></pre></div>\n<p>We query only for nodes with the <code class=\"language-text\">slug</code> value different than <code class=\"language-text\">null</code>. So, this combined with the fragments described earlier make that web pages are not created for any of <strong>parts</strong> markdown files and <strong>posts</strong> or <strong>pages</strong> named like this <code class=\"language-text\">/src/content/pages/___post-folder-name</code>.</p>\n<p>Thus, if you want to create a <strong>draft</strong> post or page, name it’s folder with the <strong>separator</strong> at the beginning.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/content/posts/___hey-iam-a-draft-post/</code></pre></div>\n<p>Whenever you will be ready to publish the post, just edit it’s folder name, add the date prefix.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/content/posts/2018-08-19___hey-iam-a-published-post-now/</code></pre></div>\n<h3 id=\"prefix\"><a href=\"#prefix\" aria-hidden=\"true\" class=\"anchor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>prefix</h3>\n<p>The <strong>prefix</strong> field is used by the starters to order posts or pages. Take a look at the code below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query {\n    posts: allMarkdownRemark(\n      filter: { fields: { source: { eq: \"posts\" }, slug: { ne: null } } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            categories\n          }\n        }\n      }\n    }\n  }\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>It’s a fragment of the <code class=\"language-text\">src/pages/blog.js</code> file of the <a href=\"./blog-starter\">Blog</a> starter. It presents a GraphQL query for data for a component presenting a list of blog posts. Pay attention to the query arguments.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">filter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> eq<span class=\"token punctuation\">:</span> <span class=\"token string\">\"posts\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> slug<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> ne<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\nsort<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fields___prefix<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">:</span> <span class=\"token constant\">DESC</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>We query for <strong>posts</strong> which have the <code class=\"language-text\">slug</code> field defined, different than <code class=\"language-text\">null</code> and we order the result according to the <code class=\"language-text\">prefix</code> field.</p>\n<p>So, if you name a post like below</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/content/posts/hey-iam-a-unordered-post/</code></pre></div>\n<p>the script will not know where to place the post on the list.</p>\n<h2 id=\"pages\"><a href=\"#pages\" aria-hidden=\"true\" class=\"anchor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>Pages</h2>\n<p>The pages are the subjects to the same naming conventions.</p>\n<ul>\n<li>A name with the <strong>separator</strong> at the beginning makes a <strong>draft</strong> page.</li>\n<li>The <strong>prefix</strong> orders pages.</li>\n</ul>\n<p><strong>A note.</strong> The <strong>docs</strong> markdown files in the <a href=\"./classy-docs-starter\">Classy Docs</a> starter are standard <strong>pages</strong>, they got a separate folder only for convenience.</p>\n<h2 id=\"motivation\"><a href=\"#motivation\" aria-hidden=\"true\" class=\"anchor\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>Motivation</h2>\n<p>These naming conventions let you <strong>at a single glance</strong> learn about the posts/pages status or position.</p>\n<p>You do not have to open the post file to know if the post is still a draft or a published one already. You do not have to open the page file to know if it should be before or after another one on the listing. That’s convenient, isn’t it?</p>","excerpt":"All starters of  Gatsby Starter Kit  use  Markdown  files to store content. The markdown files are gathered in sub-folders of  . Depending…","fileAbsolutePath":"/home/greg/dev/mystarters/gatsby-starter-kit-docs/src/content/docs/6.1___file-names/index.md","fields":{"slug":"/file-names/","prefix":"6.1","source":"docs"},"frontmatter":{"title":"Markdown files' names conventions","shortTitle":"Markdown files' names"}},"pages":{"edges":[{"node":{"fields":{"slug":"/whats-gatsby-starter-kit/","prefix":"2.1"},"frontmatter":{"title":"What's Gatsby Starter Kit?","shortTitle":null,"categories":["general"]},"headings":[],"tableOfContents":""}},{"node":{"fields":{"slug":"/prerequisites/","prefix":"2.2"},"frontmatter":{"title":"Prerequisites","shortTitle":null,"categories":["general"]},"headings":[{"value":"Gatsby newcomers","depth":3},{"value":"Windows users","depth":3}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/prerequisites/#gatsby-newcomers\">Gatsby newcomers</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/prerequisites/#windows-users\">Windows users</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/default-usage/","prefix":"2.3"},"frontmatter":{"title":"Default usage","shortTitle":null,"categories":["general"]},"headings":[{"value":"With or without content?","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/default-usage/#with-or-without-content\">With or without content?</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/advanced-usage/","prefix":"2.4"},"frontmatter":{"title":"Advanced usage","shortTitle":null,"categories":["general"]},"headings":[{"value":"What’s the difference?","depth":2},{"value":"Git clone","depth":2},{"value":"Developing","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/advanced-usage/#whats-the-difference\">What’s the difference?</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/advanced-usage/#git-clone\">Git clone</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/advanced-usage/#developing\">Developing</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/minimal-starter/","prefix":"3.1"},"frontmatter":{"title":"Minimal starter","shortTitle":"Minimal","categories":["starter"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/minimal-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/minimal-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/minimal-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/minimal-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/minimal-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/equipped-starter/","prefix":"3.2"},"frontmatter":{"title":"Equipped starter","shortTitle":"Equipped","categories":["starter"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/equipped-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/equipped-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/equipped-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/equipped-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/equipped-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/themed-starter/","prefix":"3.3"},"frontmatter":{"title":"Themed starter","shortTitle":"Themed","categories":["starter"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/themed-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/themed-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/themed-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/themed-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/themed-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/website-starter/","prefix":"3.4"},"frontmatter":{"title":"Website starter","shortTitle":"Website","categories":["starter"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/website-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/website-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/website-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/website-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/website-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/blog-starter/","prefix":"3.5"},"frontmatter":{"title":"Blog starter","shortTitle":"Blog","categories":["starter"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/blog-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/blog-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/blog-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/blog-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/blog-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/classy-docs-starter/","prefix":"4.1"},"frontmatter":{"title":"Classy Docs starter","shortTitle":"Classy Docs","categories":["themed"]},"headings":[{"value":"Features","depth":2},{"value":"Gatsby plugins","depth":2},{"value":"Add-ons","depth":2},{"value":"Folder structure","depth":2},{"value":"Installation","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/classy-docs-starter/#features\">Features</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/classy-docs-starter/#gatsby-plugins\">Gatsby plugins</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/classy-docs-starter/#add-ons\">Add-ons</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/classy-docs-starter/#folder-structure\">Folder structure</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/classy-docs-starter/#installation\">Installation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/licence/","prefix":"5.3"},"frontmatter":{"title":"License","shortTitle":null,"categories":["other"]},"headings":[],"tableOfContents":""}},{"node":{"fields":{"slug":"/file-names/","prefix":"6.1"},"frontmatter":{"title":"Markdown files' names conventions","shortTitle":"Markdown files' names","categories":["guides"]},"headings":[{"value":"Posts","depth":2},{"value":"slug","depth":3},{"value":"prefix","depth":3},{"value":"Pages","depth":2},{"value":"Motivation","depth":2}],"tableOfContents":"<ul>\n<li>\n<p><a href=\"/gatsby-starter-kit-docs/file-names/#posts\">Posts</a></p>\n<ul>\n<li><a href=\"/gatsby-starter-kit-docs/file-names/#slug\">slug</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/file-names/#prefix\">prefix</a></li>\n</ul>\n</li>\n<li><a href=\"/gatsby-starter-kit-docs/file-names/#pages\">Pages</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/file-names/#motivation\">Motivation</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/website-themes/","prefix":"6.2"},"frontmatter":{"title":"React Website Themes library","shortTitle":"Website Themes","categories":["guides"]},"headings":[{"value":"Usage","depth":2},{"value":"Styles","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/website-themes/#usage\">Usage</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/website-themes/#styles\">Styles</a></li>\n</ul>"}},{"node":{"fields":{"slug":"/custom-style/","prefix":"6.3"},"frontmatter":{"title":"Theme's style customization","shortTitle":null,"categories":["guides"]},"headings":[{"value":"CSS variables","depth":2},{"value":"Customization","depth":3},{"value":"Global styles","depth":2},{"value":"Customization.","depth":3},{"value":"Components’ styles","depth":2},{"value":"Customization","depth":3}],"tableOfContents":"<ul>\n<li>\n<p><a href=\"/gatsby-starter-kit-docs/custom-style/#css-variables\">CSS variables</a></p>\n<ul>\n<li><a href=\"/gatsby-starter-kit-docs/custom-style/#customization\">Customization</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/gatsby-starter-kit-docs/custom-style/#global-styles\">Global styles</a></p>\n<ul>\n<li><a href=\"/gatsby-starter-kit-docs/custom-style/#customization-1\">Customization.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/gatsby-starter-kit-docs/custom-style/#components-styles\">Components’ styles</a></p>\n<ul>\n<li><a href=\"/gatsby-starter-kit-docs/custom-style/#customization-2\">Customization</a></li>\n</ul>\n</li>\n</ul>"}},{"node":{"fields":{"slug":"/add-ons-and-env-variables/","prefix":"6.4"},"frontmatter":{"title":"Add-ons and Environment Variables","shortTitle":null,"categories":["guides"]},"headings":[{"value":"Setting up Environment Variables","depth":2},{"value":"Setting up Google Analytics","depth":2},{"value":"Setting up Facebook Comments","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/gatsby-starter-kit-docs/add-ons-and-env-variables/#setting-up-environment-variables\">Setting up Environment Variables</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/add-ons-and-env-variables/#setting-up-google-analytics\">Setting up Google Analytics</a></li>\n<li><a href=\"/gatsby-starter-kit-docs/add-ons-and-env-variables/#setting-up-facebook-comments\">Setting up Facebook Comments</a></li>\n</ul>"}}]},"footerLinks":{"html":"<ul>\n<li><a href=\"https://github.com/greglobinski/gatsby-starter-kit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></li>\n<li>Built by <a href=\"https://www.greglobinski.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">greg lobinski</a></li>\n<li><a href=\"https://dev.greglobinski.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Front-end web development with Greg</a></li>\n</ul>"},"copyright":{"html":"<p>Copyright 2018 greg lobinski</p>"}},"pageContext":{"slug":"/file-names/","source":"docs"}}